# =======================
# Shiro INI configuration
# =======================
[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
#jdbcRealm.permissionsLookupEnabled=false
# If not filled, subclasses of JdbcRealm assume "select password from users where username = ?"

#authenticationQuery
jdbcRealm.authenticationQuery = select correo from users where correo = ?
# If not filled, subclasses of JdbcRealm assume "select role_name from user_roles where username = ?"
jdbcRealm.userRolesQuery = select role from users_roles where role = ?


#Configuration dataBase
dataSource = org.postgresql.ds.PGPoolingDataSource
dataSource.serverName = ec2-107-22-241-205.compute-1.amazonaws.com
dataSource.databaseName = daoa63a83kj41b
dataSource.ssl = true
dataSource.sslfactory = org.postgresql.ssl.NonValidatingFactory
dataSource.portNumber = 5432
dataSource.user = qlvvuutufrvcpi
dataSource.password = e55af0ae54bbcd717582e0d1a285ea36b09d23c48bc90f67f06ddb3f3b3ecd8f
jdbcRealm.dataSource = $dataSource


#important URL
authc.loginUrl = /faces/login.xhtml
roles.unauthorizedUrl = /unauthorized.xhtml

#passwordMatcher
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
credentialsMatcher = org.apache.shiro.authc.credential.PasswordMatcher

#[users]
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.

#[roles]
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.


[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web docfaces/login.xhtml =authc/anom ..., rol[specific rol]
/logout = logout
